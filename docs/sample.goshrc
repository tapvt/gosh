# Sample .goshrc configuration file for gosh
# This file is sourced for interactive shells

# ============================================================================
# PROMPT CONFIGURATION
# ============================================================================

# Prompt format string
# %u = username, %h = hostname, %w = working directory, %W = basename of working directory
# %g = git information, %t = timestamp, %$ = prompt character ($ or #)
export GOSH_PROMPT_FORMAT="%u@%h:%w%g$ "

# Enable git information in prompt
export GOSH_SHOW_GIT_INFO=true

# Show timestamp in prompt
export GOSH_SHOW_TIMESTAMP=false

# Prompt color scheme: auto, minimal, bright, none
export GOSH_PROMPT_COLOR=auto

# ============================================================================
# HISTORY CONFIGURATION
# ============================================================================

# Maximum number of commands to keep in history
export GOSH_HISTORY_SIZE=10000

# History file location
export GOSH_HISTORY_FILE=~/.gosh_history

# Save history to file
export GOSH_SAVE_HISTORY=true

# Allow duplicate entries in history
export GOSH_HISTORY_DUPLICATES=false

# ============================================================================
# COMPLETION CONFIGURATION
# ============================================================================

# Enable tab completion
export GOSH_COMPLETION_ENABLED=true

# Case-insensitive completion
export GOSH_COMPLETION_CASE_INSENSITIVE=true

# Show hidden files in completion
export GOSH_COMPLETION_SHOW_HIDDEN=false

# ============================================================================
# GIT INTEGRATION
# ============================================================================

# Enable git integration
export GOSH_GIT_ENABLED=true

# Show git status indicators in prompt
export GOSH_GIT_SHOW_STATUS=true

# Show current branch in prompt
export GOSH_GIT_SHOW_BRANCH=true

# Show ahead/behind information
export GOSH_GIT_SHOW_AHEAD=true

# ============================================================================
# ALIASES
# ============================================================================

# File listing aliases
alias ll="ls -la"
alias la="ls -A"
alias l="ls -CF"
alias ls="ls --color=auto"

# Directory navigation
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

# Git aliases
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gp="git push"
alias gl="git log --oneline"
alias gd="git diff"
alias gb="git branch"
alias gco="git checkout"

# Safety aliases
alias rm="rm -i"
alias cp="cp -i"
alias mv="mv -i"

# Utility aliases
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"
alias h="history"
alias c="clear"

# ============================================================================
# ENVIRONMENT VARIABLES
# ============================================================================

# Default editor
export EDITOR=vim

# Default pager
export PAGER=less

# Less options
export LESS="-R -M"

# Colorize ls output
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# ============================================================================
# PATH MODIFICATIONS
# ============================================================================

# Add common directories to PATH if they exist
if [ -d "$HOME/bin" ]; then
    export PATH="$HOME/bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ]; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# Add Go bin directory if it exists
if [ -d "$HOME/go/bin" ]; then
    export PATH="$HOME/go/bin:$PATH"
fi

# ============================================================================
# FUNCTIONS
# ============================================================================

# Create directory and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Extract various archive formats
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1"     ;;
            *.tar.gz)    tar xzf "$1"     ;;
            *.bz2)       bunzip2 "$1"     ;;
            *.rar)       unrar x "$1"     ;;
            *.gz)        gunzip "$1"      ;;
            *.tar)       tar xf "$1"      ;;
            *.tbz2)      tar xjf "$1"     ;;
            *.tgz)       tar xzf "$1"     ;;
            *.zip)       unzip "$1"       ;;
            *.Z)         uncompress "$1"  ;;
            *.7z)        7z x "$1"        ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Find files by name
ff() {
    find . -name "*$1*" -type f
}

# Find directories by name
fd() {
    find . -name "*$1*" -type d
}

# ============================================================================
# GOSH-SPECIFIC SETTINGS
# ============================================================================

# Show welcome message on startup
export GOSH_SHOW_WELCOME=true

# Enable debug mode (set to true for troubleshooting)
export GOSH_DEBUG=false

# ============================================================================
# CONDITIONAL CONFIGURATIONS
# ============================================================================

# Load local customizations if they exist
if [ -f ~/.goshrc.local ]; then
    source ~/.goshrc.local
fi

# Load work-specific configurations
if [ -f ~/.goshrc.work ]; then
    source ~/.goshrc.work
fi
